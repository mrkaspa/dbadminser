// Automatically generated by MockGen. DO NOT EDIT!
// Source: store/conn_store.go

package store

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of ConnStore interface
type MockConnStore struct {
	ctrl     *gomock.Controller
	recorder *_MockConnStoreRecorder
}

// Recorder for MockConnStore (not exported)
type _MockConnStoreRecorder struct {
	mock *MockConnStore
}

func NewMockConnStore(ctrl *gomock.Controller) *MockConnStore {
	mock := &MockConnStore{ctrl: ctrl}
	mock.recorder = &_MockConnStoreRecorder{mock}
	return mock
}

func (_m *MockConnStore) EXPECT() *_MockConnStoreRecorder {
	return _m.recorder
}

func (_m *MockConnStore) StoreConn(_param0 Conn) error {
	ret := _m.ctrl.Call(_m, "StoreConn", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockConnStoreRecorder) StoreConn(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "StoreConn", arg0)
}

func (_m *MockConnStore) DeleteConn(_param0 int) error {
	ret := _m.ctrl.Call(_m, "DeleteConn", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockConnStoreRecorder) DeleteConn(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteConn", arg0)
}

func (_m *MockConnStore) ListConn() []Conn {
	ret := _m.ctrl.Call(_m, "ListConn")
	ret0, _ := ret[0].([]Conn)
	return ret0
}

func (_mr *_MockConnStoreRecorder) ListConn() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListConn")
}
